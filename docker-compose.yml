services:
  traefik:
    image: ghcr.io/traefik/traefik:3.3
    container_name: ${BASE_CONTAINER_NAME}traefik
    restart: always
    command:
      - --ping=true
      - --api.insecure=true
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.constraints=Label(`traefik.${BASE_CONTAINER_NAME}`,`true`)
      - --entrypoints.web.address=:80
      - --experimental.plugins.rewrite-body.modulename=github.com/packruler/rewrite-body
      - --experimental.plugins.rewrite-body.version=v1.2.0
      - --experimental.plugins.rewriteHeaders.modulename=github.com/XciD/traefik-plugin-rewrite-headers
      - --experimental.plugins.rewriteHeaders.version=v0.0.3
    ports:
      - "${EXTERNAL_HTTP_PORT}:80"
      - "${EXTERNAL_TRAEFIK_MANAGEMENT_PORT}:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    extra_hosts:
      - host.docker.internal:172.17.0.1
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      retries: 10

  adguardhome:
    image: adguard/adguardhome:latest
    container_name: ${BASE_CONTAINER_NAME}adguardhome
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_ROOT}/adguard/work:/opt/adguardhome/work
      - ${CONFIG_ROOT}/adguard/conf:/opt/adguardhome/conf
    network_mode: host # Host is needed for udp:53 to work correctly.
    restart: always
    labels:
      - traefik.${BASE_CONTAINER_NAME}=true
      - traefik.enable=true
      - traefik.http.routers.adguardhome.rule=(HOST(`adguard.${DOMAIN}`))
      - traefik.http.services.adguardhome.loadbalancer.server.port=5380
      - homepage.group=Network
      - homepage.name=AdGuard Home
      - homepage.icon=adguard-home.png
      - homepage.href=http://adguard.${DOMAIN}/
      - homepage.description=DNS server & ad blocker
      - homepage.weight=2
      - homepage.widget.type=adguard
      - homepage.widget.url=http://adguard.${DOMAIN}:80
      - homepage.widget.username=${ADGUARD_USER}
      - homepage.widget.password=${ADGUARD_PASS}

  portainer:
    image: portainer/portainer-ce:latest
    container_name: ${BASE_CONTAINER_NAME}portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_ROOT}/portainer:/data
    restart: always
    labels:
      - traefik.${BASE_CONTAINER_NAME}=true
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)
      - traefik.http.services.portainer.loadbalancer.server.port=9000
      - homepage.group=Management
      - homepage.name=Portainer
      - homepage.icon=portainer.png
      - homepage.href=http://portainer.${DOMAIN}
      - homepage.description=Docker container management
      - homepage.weight=1
      - homepage.widget.type=portainer
      - homepage.widget.url=http://portainer:9000
      - homepage.widget.env=${PORTAINER_ENVIRONMENT_ID}
      - homepage.widget.key=${PORTAINER_API_KEY}

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: ${BASE_CONTAINER_NAME}homepage
    environment:
      - HOMEPAGE_ALLOWED_HOSTS=${HOMEPAGE_ALLOWED_HOSTS}
      - HOMEPAGE_VAR_TITLE=${HOMEPAGE_VAR_TITLE}
      - HOMEPAGE_VAR_SEARCH_PROVIDER=${HOMEPAGE_VAR_SEARCH_PROVIDER}
      - HOMEPAGE_VAR_HEADER_STYLE=${HOMEPAGE_VAR_HEADER_STYLE}
      - HOMEPAGE_VAR_WEATHER_CITY=${HOMEPAGE_VAR_WEATHER_CITY}
      - HOMEPAGE_VAR_WEATHER_LAT=${HOMEPAGE_VAR_WEATHER_LAT}
      - HOMEPAGE_VAR_WEATHER_LONG=${HOMEPAGE_VAR_WEATHER_LONG}
      - HOMEPAGE_VAR_WEATHER_TIME=${TIMEZONE}
      - HOMEPAGE_VAR_WEATHER_UNIT=${HOMEPAGE_VAR_WEATHER_UNIT}
      - HOMEPAGE_VAR_OPENWEBUI_KEY=${OPEN_WEBUI_API_KEY}
    volumes:
      - ${CONFIG_ROOT}/homepage/homepage-config:/app/config
      - ${CONFIG_ROOT}/homepage/homepage-images:/app/public/images
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATA_ROOT}:/data
    restart: always
    command:
      [node, server.js]
    labels:
      - traefik.${BASE_CONTAINER_NAME}=true
      - traefik.enable=true
      - traefik.http.routers.homepage.rule=Host(`server.${DOMAIN}`)
      - traefik.http.services.homepage.loadbalancer.server.port=3000

  watchtower:
    image: ghcr.io/containrrr/watchtower:latest
    container_name: ${BASE_CONTAINER_NAME}watchtower
    restart: always
    environment:
      - WATCHTOWER_CLEANUP=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  autoheal:
    image: willfarrell/autoheal:latest
    container_name: ${BASE_CONTAINER_NAME}autoheal
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  wireguard:
    image: ghcr.io/wg-easy/wg-easy:latest
    container_name: ${BASE_CONTAINER_NAME}wireguard
    network_mode: "host" # Host is needed for vpn functionality.
    environment:
      - PASSWORD_HASH=${VPN_ADMIN_PASSWORD_HASH}
      - WG_HOST=${VPN_HOST}
      - WG_DEFAULT_ADDRESS=${VPN_DEFAULT_ADDRESS}
      - WG_DEFAULT_DNS=${VPN_DEFAULT_DNS}
      - WG_ALLOWED_IPS=${VPN_ALLOWED_IPS}
      - WG_PERSISTENT_KEEPALIVE=25
      - WG_PORT=51820 # Port for the vpn
      - PORT=51821 # Port for the web interface.
    volumes:
      - ${CONFIG_ROOT}/wireguard:/etc/wireguard
    restart: always
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    labels:
      - traefik.${BASE_CONTAINER_NAME}=true
      - traefik.enable=true
      - traefik.http.routers.wireguard.rule=Host(`vpn.${DOMAIN}`)
      - traefik.http.services.wireguard.loadbalancer.server.port=51821
      - homepage.group=Network
      - homepage.name=WireGuard VPN
      - homepage.icon=wireguard.png
      - homepage.href=http://vpn.${DOMAIN}
      - homepage.description=VPN server with web management
      - homepage.weight=4
      - homepage.widget.type=wgeasy
      - homepage.widget.url=http://vpn.${DOMAIN}
      - homepage.widget.password=${VPN_ADMIN_PASSWORD}

# Include media compose file
include:
  - media-compose/docker-compose.media.yml
  - AI-compose/docker-compose.ai.yml

networks:
  default:
    name: raven-compose-net
